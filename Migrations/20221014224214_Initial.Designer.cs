// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lecturesapi.Data;

#nullable disable

namespace lecturesapi.Migrations
{
    [DbContext(typeof(LanguagesDbContext))]
    [Migration("20221014224214_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("lecturesapi.Models.Domain.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("areas");
                });

            modelBuilder.Entity("lecturesapi.Models.Domain.Framework", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AreaOfDevelopment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Language")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("areaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isOpenSource")
                        .HasColumnType("bit");

                    b.Property<Guid>("languageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("areaId");

                    b.HasIndex("languageId");

                    b.ToTable("frameworks");
                });

            modelBuilder.Entity("lecturesapi.Models.Domain.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LearningCurve")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isOpenSource")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("lecturesapi.Models.Domain.Area", b =>
                {
                    b.HasOne("lecturesapi.Models.Domain.Language", null)
                        .WithMany("Areas")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("lecturesapi.Models.Domain.Framework", b =>
                {
                    b.HasOne("lecturesapi.Models.Domain.Area", "area")
                        .WithMany()
                        .HasForeignKey("areaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lecturesapi.Models.Domain.Language", "language")
                        .WithMany("Frameworks")
                        .HasForeignKey("languageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("area");

                    b.Navigation("language");
                });

            modelBuilder.Entity("lecturesapi.Models.Domain.Language", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Frameworks");
                });
#pragma warning restore 612, 618
        }
    }
}
